#!/bin/sh
#
# Plugin to monitor a ZFS Filesystem
#
# Wildcard-plugin to monitor a zfs filesystems. 
#
# To monitor a filesystem, link zfs_fs_<zpool>_<filesystem> to this file. E.g.
#
#    ln -s /usr/share/munin/node/plugins-auto/zfs_fs_ /etc/munin/node.d/zfs_fs_tank_foo
# 
# ...will monitor tank/foo fs.
#
# You can monitor zpool as well by a link on zfs_fs_<zpool>
#
# Parameters understood:
#
# 	config   (required)
# 	autoconf (optional - used by munin-config)
# 
# ** WARNING **
# For now this plugin does not allow "_" in the name of a zpool or filesystems
#


if [ "$1" = "autoconf" ]; then
    # Makes little sense to autoconf if you can't suggest
    echo no
    exit 0
fi

if [ "$1" = "suggest" ]; then
	exit 0
fi

arc_size=( $(cat /proc/spl/kstat/zfs/arcstats  | grep "^size" | awk '{ printf "%d\n", $3 / 1024 / 1024 }') )
l2arc_size=( $(arcstat.py -f l2size | tail -n 1 | sed 's/[ G]//g'| awk '{ printf "%d\n", $1 * 1024}') )
arc_meta_used=( $(cat /proc/spl/kstat/zfs/arcstats  | grep "^arc_meta_used" | awk '{ printf "%d\n", $3 / 1024 / 1024 }') )
slab_allocated=( $(awk 'BEGIN { size=0; } { size+=$3; } END { print size / 1024 / 1024; }' /proc/spl/kmem/slab))
slab_used=( $(awk 'BEGIN { size=0; } { size+=$4; } END { print size / 1024 / 1024; }' /proc/spl/kmem/slab))
zfs_total=( $(echo "$slab_used + $arc_size" | bc))

if [ "$1" = "config" ]; then

	echo <<EOF "graph_title zfs memory
graph_args --base 1024 -r -l 0 --vertical-label Mb 
graph_info This graph shows memory consumption of a zfs filesystems.
graph_category Zfs
graph_period second
arc_size.label Arc Size
arc_size.draw LINE1
arc_size.info Arc Size
arc_size.colour FF0000


l2arc_size.label L2arc Size
l2arc_size.draw LINE1
l2arc_size.info Arc Size
l2arc_size.colour FFFF00

arc_meta_used.label Arc metadata used 
arc_meta_used.draw LINE1
arc_meta_used.info Arc metadata used
arc_meta_used.colour 1f3778

slab_allocated.label Slab allocated 
slab_allocated.draw LINE1
slab_allocated.info Slab allocated
slab_allocated.colour 0099FF

slab_used.label  Slab used
slab_used.draw LINE1
slab_used.info Slab used
slab_used.colour FF66CC

zfs_total.label Zfs memory used
zfs_total.draw LINE1
zfs_total.info Zfs memory used
#zfs_total.colour ec268a
zfs_total.colour 7fdd4c
"
EOF
	exit 0
fi

echo "arc_size.value ${arc_size[0]}"
echo "l2arc_size.value ${l2arc_size[0]}"
echo "arc_meta_used.value ${arc_meta_used[0]}"
echo "slab_allocated.value ${slab_allocated[0]}"
echo "slab_used.value ${slab_used[0]}"
echo "zfs_total.value ${zfs_total[0]}"

exit 0

